{"ast":null,"code":"var _jsxFileName = \"/Users/robincollins/Desktop/thevixen/frontend/src/screens/DeliveryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { saveDeliveryAddress } from '../actions/basketActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeliveryScreen() {\n  _s();\n\n  const basket = useSelector(state => state.basket);\n  const {\n    basketAddress\n  } = basket;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [address, setAddress] = useState(basketAddress.address);\n  const [town, setTown] = useState(basketAddress.town);\n  const [city, setCity] = useState(basketAddress.city);\n  const [county, setCounty] = useState(basketAddress.county);\n  const [postcode, setPostcode] = useState(basketAddress.postcode);\n  const [country, setCountry] = useState(basketAddress.country);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('Submitted');\n    dispatch(saveDeliveryAddress({\n      address,\n      town,\n      city,\n      county,\n      postcode,\n      country\n    }));\n    navigate('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Delivery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Address Line 1\",\n          value: address ? address : '',\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Town\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Town or Village\",\n          value: town ? town : '',\n          onChange: e => setTown(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"City\",\n          value: city ? city : '',\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"county\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"County\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"County\",\n          value: county ? county : '',\n          onChange: e => setCounty(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postcode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Postcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Postcode\",\n          value: postcode ? postcode : '',\n          onChange: e => setPostcode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Country\",\n          value: country ? country : '',\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"warning\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeliveryScreen, \"Z6WoMEP+aL87bfUEOWy3o5L+ndA=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useLocation];\n});\n\n_c = DeliveryScreen;\nexport default DeliveryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryScreen\");","map":{"version":3,"sources":["/Users/robincollins/Desktop/thevixen/frontend/src/screens/DeliveryScreen.js"],"names":["React","useState","useEffect","useNavigate","useLocation","Form","Button","useDispatch","useSelector","FormContainer","saveDeliveryAddress","DeliveryScreen","basket","state","basketAddress","dispatch","navigate","location","address","setAddress","town","setTown","city","setCity","county","setCounty","postcode","setPostcode","country","setCountry","submitHandler","e","preventDefault","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveDeliveryAddress } from '../actions/basketActions'\n\nfunction DeliveryScreen() {\n\n  const basket = useSelector(state => state.basket)\n  const { basketAddress } = basket\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const [address, setAddress] = useState(basketAddress.address)\n  const [town, setTown] = useState(basketAddress.town)\n  const [city, setCity] = useState(basketAddress.city)\n  const [county, setCounty] = useState(basketAddress.county)\n  const [postcode, setPostcode] = useState(basketAddress.postcode)\n  const [country, setCountry] = useState(basketAddress.country)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log('Submitted')\n    dispatch(saveDeliveryAddress({ address, town, city, county, postcode, country }))\n    navigate('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <h1>Delivery</h1>\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Address Line 1'\n            value={address ? address : ''}\n            onChange={(e) => setAddress(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='address'>\n          <Form.Label>Town</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Town or Village'\n            value={town ? town : ''}\n            onChange={(e) => setTown(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='City'\n            value={city ? city : ''}\n            onChange={(e) => setCity(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='county'>\n          <Form.Label>County</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='County'\n            value={county ? county : ''}\n            onChange={(e) => setCounty(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postcode'>\n          <Form.Label>Postcode</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Postcode'\n            value={postcode ? postcode : ''}\n            onChange={(e) => setPostcode(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Country'\n            value={country ? country : ''}\n            onChange={(e) => setCountry(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='warning'>\n          Continue\n        </Button>\n\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default DeliveryScreen;\n\n"]},"metadata":{},"sourceType":"module"}