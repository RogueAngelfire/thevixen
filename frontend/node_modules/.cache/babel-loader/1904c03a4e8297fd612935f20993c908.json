{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { basketReducer } from './reducers/basketReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  basket: basketReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst basketItemsFromStorage = localStorage.getItem('') ? JSON.parse(localStorage.getItem('basketItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst deliveryAddressFromStorage = localStorage.getItem('deliveryAddress') ? JSON.parse(localStorage.getItem('deliveryAddress')) : {};\nconst initialState = {\n  basket: {\n    basketItems: basketItemsFromStorage,\n    deliveryAddress: deliveryAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/robincollins/Desktop/thevixen/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","basketReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","basket","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","basketItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","deliveryAddressFromStorage","initialState","basketItems","deliveryAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,QAAoG,yBAApG;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,QAAyE,0BAAzE;AAEA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC9Be,EAAAA,WAAW,EAAEX,kBADiB;AAE9BY,EAAAA,cAAc,EAAEX,qBAFc;AAG9BY,EAAAA,MAAM,EAAEX,aAHsB;AAI9BY,EAAAA,SAAS,EAAEX,gBAJmB;AAK9BY,EAAAA,YAAY,EAAEX,mBALgB;AAM9BY,EAAAA,WAAW,EAAEX,kBANiB;AAO9BY,EAAAA,iBAAiB,EAAEX,wBAPW;AAQ9BY,EAAAA,WAAW,EAAEX,kBARiB;AAS9BY,EAAAA,YAAY,EAAEX,mBATgB;AAU9BY,EAAAA,QAAQ,EAAEX;AAVoB,CAAD,CAA/B;AAcA,MAAMY,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,EAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAD6B,GACqB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GACqB,IADjD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GACqB,EADxD;AAGA,MAAMK,YAAY,GAAG;AACnBf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,WAAW,EAAER,sBADP;AAENS,IAAAA,eAAe,EAAEH;AAFX,GADW;AAKnBb,EAAAA,SAAS,EAAC;AAACiB,IAAAA,QAAQ,EAAEL;AAAX;AALS,CAArB;AASA,MAAMM,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CAACe,OAAD,EAAUkB,YAAV,EACvB7B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CADI,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { basketReducer } from './reducers/basketReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  basket: basketReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n})\n\n\nconst basketItemsFromStorage = localStorage.getItem('') ?\n  JSON.parse(localStorage.getItem('basketItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n  JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst deliveryAddressFromStorage = localStorage.getItem('deliveryAddress') ?\n  JSON.parse(localStorage.getItem('deliveryAddress')) : {}\n\nconst initialState = {\n  basket: {\n    basketItems: basketItemsFromStorage,\n    deliveryAddress: deliveryAddressFromStorage,\n  },\n  userLogin:{userInfo: userInfoFromStorage },\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n  composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}