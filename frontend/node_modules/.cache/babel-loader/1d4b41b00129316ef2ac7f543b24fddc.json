{"ast":null,"code":"var _jsxFileName = \"/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen() {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState('false');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  navigate(`/admin/user/${userId}/edit}`);\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = userUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET\n      });\n      navigate('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, successUpdate, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: user._id,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"warning\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UserEditScreen, \"3H3UApEGC/wEeFZwsO+9lBADoGg=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","useParams","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,wBAA3C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAExB,QAAM;AAACC,IAAAA;AAAD,MAAYZ,SAAS,EAA3B;AAEA,QAAMa,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,OAAD,CAAtC;AAEA,QAAMwB,QAAQ,GAAGjB,WAAW,EAA5B;AAGA,QAAMkB,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AACAR,EAAAA,QAAQ,CAAE,eAAcD,MAAO,QAAvB,CAAR;AAEA,QAAMc,UAAU,GAAGtB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACI,UAAhB,CAA9B;AACA,QAAM;AAAEH,IAAAA,KAAK,EAAEI,WAAT;AAAsBH,IAAAA,OAAO,EAAEI,aAA/B;AAA8CC,IAAAA,OAAO,EAAEC;AAAvD,MAAyEJ,UAA/E;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAGiC,aAAH,EAAiB;AACfV,MAAAA,QAAQ,CAAC;AAACW,QAAAA,IAAI,EAACrB;AAAN,OAAD,CAAR;AACAG,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD,KAHD,MAGM;AAEJ,UAAG,CAACY,IAAI,CAACX,IAAN,IAAcW,IAAI,CAACO,GAAL,KAAaC,MAAM,CAACrB,MAAD,CAApC,EAA8C;AAC5CQ,QAAAA,QAAQ,CAACZ,cAAc,CAACI,MAAD,CAAf,CAAR;AACD,OAFD,MAEK;AACHG,QAAAA,OAAO,CAACU,IAAI,CAACX,IAAN,CAAP;AACAG,QAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAG,QAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACD;AACF;AAEF,GAhBQ,EAgBN,CAACO,IAAD,EAAOb,MAAP,EAAekB,aAAf,EAA8BjB,QAA9B,CAhBM,CAAT;;AAkBA,QAAMqB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,QAAQ,CAACX,UAAU,CAAC;AAAEuB,MAAAA,GAAG,EAACP,IAAI,CAACO,GAAX;AAAgBlB,MAAAA,IAAhB;AAAsBE,MAAAA,KAAtB;AAA6BE,MAAAA;AAA7B,KAAD,CAAX,CAAR;AACD,GAHD;;AAIE,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECU,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFlB,EAGCD,WAAW,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHhB,EAKCH,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAeD,KAAK,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAH,gBAE1B,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEW,aAAhB;AAAA,gCAEE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,KAAK,EAAEpB,IAHT;AAIE,YAAA,QAAQ,EAAGqB,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,WAAW,EAAC,qBAFd;AAGE,YAAA,KAAK,EAAEtB,KAHT;AAIE,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAyBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,SAAtB;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,OAAO,EAAEpB,OAHX;AAIE,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,UAAU,CAACgB,CAAC,CAACE,MAAF,CAASE,OAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF,eAqCF,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCE;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD;;GAvGM5B,c;UAEWX,S,EAEDD,W,EAKAI,W,EAGGC,W,EAIDA,W;;;KAhBZO,c;AAyGT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n  const {userId}  = useParams()\n\n  const navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState('false')\n\n  const dispatch = useDispatch()\n\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { error, loading, user } = userDetails\n  navigate(`/admin/user/${userId}/edit}`)\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n  useEffect(() => {\n\n    if(successUpdate){\n      dispatch({type:USER_UPDATE_RESET})\n      navigate('/admin/userlist')\n    }else {\n\n      if(!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId))\n      }else{\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n    \n  }, [user, userId, successUpdate, navigate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id:user._id, name, email, isAdmin }))\n  }\n    return (\n      <div>\n        <Link to='/admin/userlist'>\n          Go Back\n        </Link>\n\n        <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader/>}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \n        : (\n          <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              >\n\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control    \n                type='email'\n                placeholder='Enter Email Address'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              >\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isAdmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              >\n              </Form.Check>\n            </Form.Group>\n\n        \n\n        <Button type='submit' variant='warning'>\n          Update\n        </Button>\n\n        </Form>\n\n        )}\n                \n      </FormContainer>\n      </div>\n      \n    )\n  }\n\nexport default UserEditScreen\n"]},"metadata":{},"sourceType":"module"}