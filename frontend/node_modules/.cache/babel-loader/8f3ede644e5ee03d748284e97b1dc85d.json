{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { basketReducer } from './reducers/basketReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  basket: basketReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst basketItemsFromStorage = localStorage.getItem('') ? JSON.parse(localStorage.getItem('basketItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst deliveryAddressFromStorage = localStorage.getItem('deliveryAddress') ? JSON.parse(localStorage.getItem('deliveryAddress')) : {};\nconst initialState = {\n  basket: {\n    basketItems: basketItemsFromStorage,\n    deliveryAddress: deliveryAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/robincollins/Desktop/thevixen/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","basketReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","basket","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","basketItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","deliveryAddressFromStorage","initialState","basketItems","deliveryAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AAUA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAC9BmB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEf,qBAFc;AAG9BgB,EAAAA,MAAM,EAAEf,aAHsB;AAI9BgB,EAAAA,SAAS,EAAEf,gBAJmB;AAK9BgB,EAAAA,YAAY,EAAEf,mBALgB;AAM9BgB,EAAAA,WAAW,EAAEf,kBANiB;AAO9BgB,EAAAA,iBAAiB,EAAEf,wBAPW;AAQ9BgB,EAAAA,QAAQ,EAAEf,eARoB;AAS9BgB,EAAAA,UAAU,EAAEf,iBATkB;AAU9BgB,EAAAA,UAAU,EAAEf,iBAVkB;AAa9BgB,EAAAA,WAAW,EAAEf,kBAbiB;AAc9BgB,EAAAA,YAAY,EAAEf,mBAdgB;AAe9BgB,EAAAA,QAAQ,EAAEf,eAfoB;AAgB9BgB,EAAAA,WAAW,EAAEf;AAhBiB,CAAD,CAA/B;AAoBA,MAAMgB,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,EAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAD6B,GACqB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GACqB,IADjD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GACqB,EADxD;AAGA,MAAMK,YAAY,GAAG;AACnBnB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,WAAW,EAAER,sBADP;AAENS,IAAAA,eAAe,EAAEH;AAFX,GADW;AAKnBjB,EAAAA,SAAS,EAAC;AAACqB,IAAAA,QAAQ,EAAEL;AAAX;AALS,CAArB;AASA,MAAMM,UAAU,GAAG,CAAC1C,KAAD,CAAnB;AAEA,MAAM2C,KAAK,GAAG9C,WAAW,CAACmB,OAAD,EAAUsB,YAAV,EACvBrC,mBAAmB,CAACF,eAAe,CAAC,GAAG2C,UAAJ,CAAhB,CADI,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { basketReducer } from './reducers/basketReducers'\nimport { \n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\n\nimport { \n  orderCreateReducer,\n  orderDetailsReducer, \n  orderPayReducer, \n  orderListMyReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  basket: basketReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n\n\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n})\n\n\nconst basketItemsFromStorage = localStorage.getItem('') ?\n  JSON.parse(localStorage.getItem('basketItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n  JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst deliveryAddressFromStorage = localStorage.getItem('deliveryAddress') ?\n  JSON.parse(localStorage.getItem('deliveryAddress')) : {}\n\nconst initialState = {\n  basket: {\n    basketItems: basketItemsFromStorage,\n    deliveryAddress: deliveryAddressFromStorage,\n  },\n  userLogin:{userInfo: userInfoFromStorage },\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n  composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}