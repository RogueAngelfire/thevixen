[{"/Users/robincollins/Desktop/thevixen/frontend/src/index.js":"1","/Users/robincollins/Desktop/thevixen/frontend/src/App.js":"2","/Users/robincollins/Desktop/thevixen/frontend/src/reportWebVitals.js":"3","/Users/robincollins/Desktop/thevixen/frontend/src/components/Header.js":"4","/Users/robincollins/Desktop/thevixen/frontend/src/components/Footer.js":"5","/Users/robincollins/Desktop/thevixen/frontend/src/screens/HomeScreen.js":"6","/Users/robincollins/Desktop/thevixen/frontend/src/products.js":"7","/Users/robincollins/Desktop/thevixen/frontend/src/components/Product.js":"8","/Users/robincollins/Desktop/thevixen/frontend/src/components/Rating.js":"9","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductScreen.js":"10","/Users/robincollins/Desktop/thevixen/frontend/src/store.js":"11","/Users/robincollins/Desktop/thevixen/frontend/src/reducers/productReducers.js":"12","/Users/robincollins/Desktop/thevixen/frontend/src/constants/productConstants.js":"13","/Users/robincollins/Desktop/thevixen/frontend/src/actions/productActions.js":"14","/Users/robincollins/Desktop/thevixen/frontend/src/components/Loader.js":"15","/Users/robincollins/Desktop/thevixen/frontend/src/components/Message.js":"16","/Users/robincollins/Desktop/thevixen/frontend/src/screens/BasketScreen.js":"17","/Users/robincollins/Desktop/thevixen/frontend/src/reducers/basketReducers.js":"18","/Users/robincollins/Desktop/thevixen/frontend/src/constants/basketConstants.js":"19","/Users/robincollins/Desktop/thevixen/frontend/src/actions/basketActions.js":"20","/Users/robincollins/Desktop/thevixen/frontend/src/reducers/userReducers.js":"21","/Users/robincollins/Desktop/thevixen/frontend/src/constants/userConstants.js":"22","/Users/robincollins/Desktop/thevixen/frontend/src/screens/LoginScreen.js":"23","/Users/robincollins/Desktop/thevixen/frontend/src/actions/userActions.js":"24","/Users/robincollins/Desktop/thevixen/frontend/src/components/FormContainer.js":"25","/Users/robincollins/Desktop/thevixen/frontend/src/screens/RegisterScreen.js":"26","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProfileScreen.js":"27","/Users/robincollins/Desktop/thevixen/frontend/src/screens/DeliveryScreen.js":"28","/Users/robincollins/Desktop/thevixen/frontend/src/components/CheckoutSteps.js":"29","/Users/robincollins/Desktop/thevixen/frontend/src/screens/PaymentScreen.js":"30","/Users/robincollins/Desktop/thevixen/frontend/src/screens/PlaceOrderScreen.js":"31","/Users/robincollins/Desktop/thevixen/frontend/src/reducers/orderReducers.js":"32","/Users/robincollins/Desktop/thevixen/frontend/src/constants/orderConstants.js":"33","/Users/robincollins/Desktop/thevixen/frontend/src/actions/orderActions.js":"34","/Users/robincollins/Desktop/thevixen/frontend/src/screens/OrderScreen.js":"35","/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserListScreen.js":"36","/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserEditScreen.js":"37","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductListScreen.js":"38","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductEditScreen.js":"39"},{"size":594,"mtime":1641483726107,"results":"40","hashOfConfig":"41"},{"size":2258,"mtime":1647275161423,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1638711962405,"results":"43","hashOfConfig":"41"},{"size":3452,"mtime":1647349969674,"results":"44","hashOfConfig":"41"},{"size":467,"mtime":1641284950198,"results":"45","hashOfConfig":"41"},{"size":983,"mtime":1641639184820,"results":"46","hashOfConfig":"41"},{"size":980,"mtime":1641374519013,"results":"47","hashOfConfig":"41"},{"size":842,"mtime":1638900557617,"results":"48","hashOfConfig":"41"},{"size":1338,"mtime":1638891664921,"results":"49","hashOfConfig":"41"},{"size":3859,"mtime":1641733259603,"results":"50","hashOfConfig":"41"},{"size":2062,"mtime":1647691692993,"results":"51","hashOfConfig":"41"},{"size":2482,"mtime":1647691594319,"results":"52","hashOfConfig":"41"},{"size":1030,"mtime":1647691476509,"results":"53","hashOfConfig":"41"},{"size":3653,"mtime":1647704277744,"results":"54","hashOfConfig":"41"},{"size":376,"mtime":1641638254185,"results":"55","hashOfConfig":"41"},{"size":208,"mtime":1641639095018,"results":"56","hashOfConfig":"41"},{"size":4168,"mtime":1643884941666,"results":"57","hashOfConfig":"41"},{"size":1249,"mtime":1643034938714,"results":"58","hashOfConfig":"41"},{"size":307,"mtime":1643034298267,"results":"59","hashOfConfig":"41"},{"size":1223,"mtime":1643034833343,"results":"60","hashOfConfig":"41"},{"size":3473,"mtime":1646122508433,"results":"61","hashOfConfig":"41"},{"size":1478,"mtime":1646122301996,"results":"62","hashOfConfig":"41"},{"size":2282,"mtime":1642160442045,"results":"63","hashOfConfig":"41"},{"size":6270,"mtime":1646123992122,"results":"64","hashOfConfig":"41"},{"size":326,"mtime":1642146255544,"results":"65","hashOfConfig":"41"},{"size":3338,"mtime":1642169528557,"results":"66","hashOfConfig":"41"},{"size":5242,"mtime":1647518860378,"results":"67","hashOfConfig":"41"},{"size":3561,"mtime":1642953987574,"results":"68","hashOfConfig":"41"},{"size":1192,"mtime":1642953785590,"results":"69","hashOfConfig":"41"},{"size":1495,"mtime":1642961626263,"results":"70","hashOfConfig":"41"},{"size":5105,"mtime":1643034179602,"results":"71","hashOfConfig":"41"},{"size":2303,"mtime":1643452570317,"results":"72","hashOfConfig":"41"},{"size":843,"mtime":1643372154071,"results":"73","hashOfConfig":"41"},{"size":3486,"mtime":1643373144760,"results":"74","hashOfConfig":"41"},{"size":5759,"mtime":1643370288197,"results":"75","hashOfConfig":"41"},{"size":2751,"mtime":1646209312519,"results":"76","hashOfConfig":"41"},{"size":3244,"mtime":1647516966800,"results":"77","hashOfConfig":"41"},{"size":3706,"mtime":1647424908388,"results":"78","hashOfConfig":"41"},{"size":5399,"mtime":1647705777642,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"og6l0l",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/robincollins/Desktop/thevixen/frontend/src/index.js",[],["172","173"],"/Users/robincollins/Desktop/thevixen/frontend/src/App.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/reportWebVitals.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Header.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Footer.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/HomeScreen.js",["174"],"import React, { useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen() {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { error, loading, products } = productList\n\n  useEffect(() => {\n    dispatch(listProducts())\n    \n  }, [dispatch])\n\n  return (\n    <div>\n      <h1>Featured Cakes</h1>\n      {loading ? <Loader />\n        : error ? <Message variant='danger'>{error}</Message>\n        :\n        <Row>\n        {products.map(product => (\n          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n            <Product product={product} />\n          </Col>\n        ))}\n        </Row>\n      }\n \n    </div>\n  )\n}\n\nexport default HomeScreen\n","/Users/robincollins/Desktop/thevixen/frontend/src/products.js",[],["175","176"],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Product.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Rating.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductScreen.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/store.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/reducers/productReducers.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/constants/productConstants.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/actions/productActions.js",["177"],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Loader.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/components/Message.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/BasketScreen.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/reducers/basketReducers.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/constants/basketConstants.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/actions/basketActions.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/reducers/userReducers.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/constants/userConstants.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/LoginScreen.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/actions/userActions.js",["178"],"import axios from 'axios'\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n\n  USER_LOGOUT,\n  \n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\nexport const login = (email, password) => async (dispatch) => {\n  try{\n    dispatch({ \n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers:{\n        'content-type': 'application/json'\n      }\n    }\n\n    const {data} = await axios.post(\n      '/api/users/login/',\n      { 'username': email, 'password': password },\n      config\n      )\n\n      dispatch({\n        type:USER_LOGIN_SUCCESS,\n        payload:data\n      })\n\n      localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }catch(error){\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try{\n    dispatch({ \n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers:{\n        'content-type': 'application/json'\n      }\n    }\n\n    const {data} = await axios.post(\n      '/api/users/register/',\n      { 'name': name, 'email': email, 'password': password },\n      config\n      )\n\n      dispatch({\n        type:USER_REGISTER_SUCCESS,\n        payload:data\n      })\n\n      dispatch({\n        type:USER_LOGIN_SUCCESS,\n        payload:data\n      })\n\n      localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }catch(error){\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: USER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const {data} = await axios.get(\n      `/api/users/${id}/`,\n      config\n      )\n\n      dispatch({\n        type:USER_DETAILS_SUCCESS,\n        payload:data\n      })\n\n\n  }catch(error){\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: USER_UPDATE_PROFILE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n      )\n\n      dispatch({\n        type: USER_UPDATE_PROFILE_SUCCESS,\n        payload: data\n      })\n\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      })\n\n      localStorage.setItem('userInfo', JSON.stringify(data))\n\n  }catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: USER_LIST_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(\n      `/api/users/`,\n      config\n      )\n\n      dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: data\n      })\n\n  }catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: USER_DELETE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.delete(\n      `/api/users/delete/${id}/`,\n      config\n      )\n\n      dispatch({\n        type: USER_DELETE_SUCCESS,\n        payload: data\n      })\n\n  }catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: USER_UPDATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n      )\n\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n      })\n\n      dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data\n      })\n\n  }catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n","/Users/robincollins/Desktop/thevixen/frontend/src/components/FormContainer.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/RegisterScreen.js",["179"],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\n\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen(location) {\n\n\n  const navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  const userRegister = useSelector(state => state.userRegister)\n  const {error, loading, userInfo} = userRegister\n\n  useEffect(() => {\n    if(userInfo) {\n      navigate(redirect)\n    }\n  }, [navigate, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if(password != confirmPassword){\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n    \n  }\n    return (\n      <FormContainer>\n        <h1>Register an Account</h1>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type='name'\n            placeholder='Enter Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type='email'\n            placeholder='Enter Email Address'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type='password'\n            placeholder='Enter Your Password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='passwordConfirm'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type='password'\n            placeholder='Confirm Your Password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='warning'>\n          Register\n        </Button>\n\n        </Form>\n\n        <Row className='py-3'>\n        <Col>\n          Have an Account? <Link\n            to={redirect ? `/login?redirect=${redirect}` : '/login'}\n          >\n            Sign In\n          </Link>\n        </Col>\n      </Row>\n      </FormContainer>\n    )\n  }\n\nexport default RegisterScreen\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProfileScreen.js",["180"],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen() {\n\n  const navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { error, loading, user } = userDetails\n  \n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  console.log(orderListMy, 'orderListMy')\n  console.log(orders, 'orders')\n\n  useEffect(() => {\n    if(!userInfo) {\n      navigate('/login')\n    } else {\n      if(!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, navigate, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if(password !== confirmPassword){\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password \n      }))\n      setMessage('')\n    }\n    \n  }\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type='name'\n            placeholder='Enter Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type='email'\n            placeholder='Enter Email Address'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter Your Password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='passwordConfirm'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm Your Password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='warning'>\n          Update\n        </Button>\n\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>£{order.totalPrice}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                    <i className='fas fa-times-circle' style={{ color: 'red' }}></i>\n                  )}</td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='warning'>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default ProfileScreen;","/Users/robincollins/Desktop/thevixen/frontend/src/screens/DeliveryScreen.js",["181","182"],"import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveDeliveryAddress } from '../actions/basketActions'\n\nfunction DeliveryScreen() {\n\n  const basket = useSelector(state => state.basket)\n  const { deliveryAddress } = basket\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n  //const location = useLocation()\n\n  const [address, setAddress] = useState(deliveryAddress.address)\n  const [town, setTown] = useState(deliveryAddress.town)\n  const [city, setCity] = useState(deliveryAddress.city)\n  const [county, setCounty] = useState(deliveryAddress.county)\n  const [postcode, setPostcode] = useState(deliveryAddress.postcode)\n  const [country, setCountry] = useState(deliveryAddress.country)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log('Submitted')\n    dispatch(saveDeliveryAddress({ address, town, city, county, postcode, country }))\n    navigate('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Delivery</h1>\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Address Line 1'\n            value={address ? address : ''}\n            onChange={(e) => setAddress(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='address'>\n          <Form.Label>Town</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Town or Village'\n            value={town ? town : ''}\n            onChange={(e) => setTown(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='City'\n            value={city ? city : ''}\n            onChange={(e) => setCity(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='county'>\n          <Form.Label>County</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='County'\n            value={county ? county : ''}\n            onChange={(e) => setCounty(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postcode'>\n          <Form.Label>Postcode</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Postcode'\n            value={postcode ? postcode : ''}\n            onChange={(e) => setPostcode(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Country'\n            value={country ? country : ''}\n            onChange={(e) => setCountry(e.target.value)}\n          >\n\n          </Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='warning'>\n          Continue\n        </Button>\n\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default DeliveryScreen;\n\n","/Users/robincollins/Desktop/thevixen/frontend/src/components/CheckoutSteps.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/screens/PaymentScreen.js",["183","184","185"],"import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { Form, Button, Col, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/basketActions'\n\nfunction PaymentScreen() {\n\n  const basket = useSelector(state => state.basket)\n  const { deliveryAddress } = basket\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  if(!deliveryAddress.address) {\n    navigate('/delivery')\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    navigate('/placeorder')\n  }\n\n  return (\n  <FormContainer>\n    <CheckoutSteps step1 step2 step3 />\n\n    <Form onSubmit={submitHandler}>\n\n      <Form.Group>\n        <Form.Label as='legend'>Select Method</Form.Label>\n        <Col>\n          <Form.Check\n            type='radio'\n            label='PayPal or Credit Card'\n            id='paypal'\n            name='paymentMethod'\n            checked\n            onChange={(e) => setPaymentMethod(e.target.value)}\n          >\n          </Form.Check>\n        </Col>\n      </Form.Group>\n\n      <Button typ='submit' variant='warning'>\n        Continue\n      </Button>\n\n    </Form>\n  </FormContainer>\n  )\n}\n\nexport default PaymentScreen;\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/PlaceOrderScreen.js",["186","187","188","189","190"],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen() {\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { order, error, success } = orderCreate\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const basket = useSelector(state => state.basket)\n\n  basket.itemsPrice = basket.basketItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n  basket.deliveryPrice = (basket.itemsPrice > 100 ? 0 : 10).toFixed(2)\n  basket.taxPrice = Number((0) * basket.itemsPrice).toFixed\n  \n  //The code below returned NaN but that could be because pages not linking correctly at the minute with new react-router-dom 6\n  basket.totalPrice = (Number(basket.itemsPrice) + Number(basket.deliveryPrice) + Number(basket.taxPrice)).toFixed(2)\n\n\n  if(!basket.paymentMethod) {\n    navigate('/payment')\n  }\n\n  useEffect(() => {\n    if(success){\n      navigate(`/order/${order._id}`)\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n  }, [success, navigate])\n\n  const placeOrder = () => {\n    dispatch(createOrder({\n      orderItems:basket.basketItems,\n      deliveryAddress:basket.deliveryAddress,\n      paymentMethod:basket.paymentMethod,\n      itemsPrice:basket.itemsPrice,\n      deliveryPrice:basket.deliveryPrice,\n      taxPrice: basket.taxPrice,\n      totalPrice: basket.totalPrice,\n    }))\n  }\n\n  return (\n  <div>\n    <CheckoutSteps step1 step2 step3 step4 />\n    <Row>\n      <Col md={8}>\n        <ListGroup variant='warning'>\n\n          <ListGroup.Item>\n            <h2>Delivery</h2>\n            <p>\n              <strong>Deliver to: </strong>\n              {basket.deliveryAddress.address}, {basket.deliveryAddress.town}\n              {' '}\n              {basket.deliveryAddress.city}, {basket.deliveryAddress.county}\n              {' '}\n              {basket.deliveryAddress.postcode}, {basket.deliveryAddress.country}\n            </p>\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method: </strong>\n              {basket.paymentMethod}\n            </p>\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {basket.basketItems.length === 0 ? <Message variant='info'>\n              Your Cake Basket is Empty\n            </Message> : (\n              <ListGroup variant='flush'>\n                {basket.basketItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid rounded/>\n                      </Col>\n\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n\n                      <Col md={4}>\n                        {item.qty} x £{item.price} = £{(item.qty * item.price).toFixed(2) }\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n\n        </ListGroup>\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Order Summary</h2>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Items:</Col>\n                <Col>£{basket.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Delivery:</Col>\n                <Col>£{basket.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>VAT:</Col>\n                <Col>£{basket.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Total:</Col>\n                <Col>£{basket.totalPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              {error &&  <Message variant='danger'>{error}</Message>}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                variant='warning'\n                disabled={basket.basketItems === 0}\n                onClick={placeOrder}\n              >\n                  Place Order\n              </Button>\n            </ListGroup.Item>\n\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  </div>\n  )\n}\n\nexport default PlaceOrderScreen;\n\n","/Users/robincollins/Desktop/thevixen/frontend/src/reducers/orderReducers.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/constants/orderConstants.js",[],"/Users/robincollins/Desktop/thevixen/frontend/src/actions/orderActions.js",["191","192"],"import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  \n} from '../constants/orderConstants'\n\n\nimport { BASKET_CLEAR_ITEMS } from '../constants/basketConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: ORDER_CREATE_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.post(\n      `/api/orders/add/`,\n      order,\n      config\n      )\n\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data\n      })\n\n      dispatch({\n        type: BASKET_CLEAR_ITEMS,\n        payload: data\n      })\n\n      localStorage.removeItem('basketItems')\n\n\n  }catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: ORDER_DETAILS_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(\n      `/api/orders/${id}/`,\n      config\n      )\n\n      dispatch({\n        type: ORDER_DETAILS_SUCCESS,\n        payload: data\n      })\n\n\n  }catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: ORDER_PAY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n      )\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data\n      })\n\n\n  }catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try{\n    dispatch({ \n      type: ORDER_LIST_MY_REQUEST\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers:{\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(\n      `/api/orders/myorders/`,\n      config\n      )\n\n      dispatch({\n        type: ORDER_LIST_MY_SUCCESS,\n        payload: data\n      })\n\n\n  }catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail\n      ? error.response.data.detail\n      : error.message\n    })\n  }\n}","/Users/robincollins/Desktop/thevixen/frontend/src/screens/OrderScreen.js",["193","194","195","196"],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useLocation, useParams } from 'react-router-dom'\nimport { Form, Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match }) {\n  const { orderId } = useParams()\n  const dispatch = useDispatch()\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, error, loading } = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const navigate = useNavigate()\n\n\n  if(!loading && !error) {\n    order.itemsPrice = order.basketItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n  }\n\n\n  const addPayPalScript = () => {\n    const script = document.createElement('script')\n    script.type = 'text/javascript'\n    script.src = 'https://www.paypal.com/sdk/js?client-id=AgvilrV0xR6.Gq-IvTq0MBAX6bdoApOqWa9NoxqMcmkabpRuwEKMmbnQ'\n    script.async = true\n    script.onload = () =>{\n      setSdkReady(true)\n    }\n    document.body.appendchild(script)\n  }\n\n  useEffect(() => {\n    if(!order || successPay || order._id !== Number(orderId)){\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch(getOrderDetails(orderId))\n    }else if(!order.isPaid) {\n      if(!window.paypal){\n        addPayPalScript()\n      }else {\n        setSdkReady(true)\n      }\n    }  \n  }, [dispatch, order, orderId, successPay])\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n  <div>\n    <h1>Order: {order._id}</h1>\n    <Row>\n      <Col md={8}>\n        <ListGroup variant='warning'>\n\n          <ListGroup.Item>\n            <h2>Delivery</h2>\n            <p><strong>Name: </strong> {order.user.name}</p>\n            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n            <p>\n              <strong>Deliver to: </strong>\n              {order.deliveryAddress.address}, {order.deliveryAddress.town}\n              {' '}\n              {order.deliveryAddress.city}, {order.deliveryAddress.county}\n              {' '}\n              {order.deliveryAddress.postcode}, {order.deliveryAddress.country}\n            </p>\n\n            {order.isDelivered ? (\n              <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n            ) : (\n              <Message variant='warning'>Not Delivered</Message>\n            )}\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method: </strong>\n              {order.paymentMethod}\n            </p>\n\n            {order.isPaid ? (\n              <Message variant='success'>Paid on {order.paidAt}</Message>\n            ) : (\n              <Message variant='warning'>Not Paid</Message>\n            )}\n\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {order.basketItems.length === 0 ? <Message variant='info'>\n              Order is Empty\n            </Message> : (\n              <ListGroup variant='flush'>\n                {order.orderItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid rounded/>\n                      </Col>\n\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n\n                      <Col md={4}>\n                        {item.qty} x £{item.price} = £{(item.qty * item.price).toFixed(2) }\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n\n        </ListGroup>\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Order Summary</h2>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Items:</Col>\n                <Col>£{order.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Delivery:</Col>\n                <Col>£{order.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>VAT:</Col>\n                <Col>£{order.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <Row>\n                <Col>Total:</Col>\n                <Col>£{order.totalPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n\n\n            {!order.isPaid && (\n              <ListGroup.Item>\n                {loadingPay && <Loader/>}\n\n                {!sdkReady ? (\n                  <Loader />\n                ) : (\n                  <PayPalButton\n                    amount={order.totalPrice}\n                    onSuccess={successPaymentHandler}\n                  />\n                )}\n              </ListGroup.Item>\n            )}\n\n\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  </div>\n  )\n}\n\nexport default OrderScreen;\n\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserListScreen.js",["197"],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n// Delete function working but page not refreshing after executing action.\nfunction UserListScreen() {\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const userList = useSelector(state => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector(state => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n      if(userInfo && userInfo.isAdmin){\n        dispatch(listUsers())\n      }else{\n        navigate('/login')\n      }\n\n      dispatch(listUsers())\n  }, [dispatch, navigate, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading\n      ? <Loader/>\n      : error\n      ? (<Message variant='danger'>{error}</Message>)\n      : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th>EDIT/DELETE</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map(user => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.isAdmin ? (\n                  <i className='fas fa-check' style={{ color: 'green'}}></i>\n                ) : (\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\n                )}</td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='warning' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                      <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )\n    }\n    </div>\n    )\n  }\n\nexport default UserListScreen;\n\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/UserEditScreen.js",["198"],"import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n  const params  = useParams()\n  const userId = params.id\n\n  const navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState('false')\n\n  const dispatch = useDispatch()\n\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { error, loading, user } = userDetails\n  //navigate(`/admin/user/${userId}/edit}`)\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n  useEffect(() => {\n\n    if(successUpdate){\n      dispatch({type:USER_UPDATE_RESET})\n      navigate('/admin/userlist')\n    }else {\n\n      if(!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId))\n      }else{\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n    \n  }, [user, userId, successUpdate, navigate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id:user._id, name, email, isAdmin }))\n  }\n    return (\n      <div>\n        <Link to='/admin/userlist'>\n          Go Back\n        </Link>\n\n        <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader/>}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \n        : (\n          <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              >\n\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control    \n                type='email'\n                placeholder='Enter Email Address'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              >\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isAdmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              >\n              </Form.Check>\n            </Form.Group>\n\n        \n\n        <Button type='submit' variant='warning'>\n          Update\n        </Button>\n\n        </Form>\n\n        )}\n                \n      </FormContainer>\n      </div>\n      \n    )\n  }\n\nexport default UserEditScreen\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductListScreen.js",["199","200"],"import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen() {\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n\n  const productDelete = useSelector(state => state.productDelete)\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n  const productCreate = useSelector(state => state.productCreate)\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product:createdProduct } = productCreate\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n      dispatch({type:PRODUCT_CREATE_RESET})\n\n      if(!userInfo.isAdmin){\n        navigate('/login')\n      }\n\n      if(successCreate){\n        navigate(`/admin/product/${createdProduct._id}/edit`)\n      } else {\n        dispatch(listProducts())\n      }\n\n      dispatch(listProducts())\n  }, [dispatch, navigate, userInfo, successDelete, createdProduct])\n\n  const deleteHandler = (id) => {\n\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () =>{\n    dispatch(createProduct())\n  }\n\n  return (\n    <div>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' variant='warning' onClick={createProductHandler}>\n            <i className='fas fa-plus'> Create Product</i>\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader/>}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n      {loadingCreate && <Loader/>}\n      {errorCreate && <Message variant='success'>{errorCreate}</Message>}\n\n      {loading\n      ? <Loader/>\n      : error\n      ? (<Message variant='danger'>{error}</Message>)\n      : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>ALLERGENS</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {products.map(product => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>£{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.allergens}</td>\n\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant='warning' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                      <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )\n    }\n    </div>\n    )\n  }\n\nexport default ProductListScreen;\n\n","/Users/robincollins/Desktop/thevixen/frontend/src/screens/ProductEditScreen.js",["201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"202","replacedBy":"210"},{"ruleId":"204","replacedBy":"211"},{"ruleId":"206","severity":1,"message":"212","line":85,"column":13,"nodeType":"208","messageId":"209","endLine":85,"endColumn":17},{"ruleId":"206","severity":1,"message":"213","line":21,"column":3,"nodeType":"208","messageId":"209","endLine":21,"endColumn":28},{"ruleId":"214","severity":1,"message":"215","line":37,"column":17,"nodeType":"216","messageId":"217","endLine":37,"endColumn":19},{"ruleId":"206","severity":1,"message":"218","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"219","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"220","line":2,"column":23,"nodeType":"208","messageId":"209","endLine":2,"endColumn":34},{"ruleId":"206","severity":1,"message":"219","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"220","line":2,"column":23,"nodeType":"208","messageId":"209","endLine":2,"endColumn":34},{"ruleId":"206","severity":1,"message":"221","line":3,"column":29,"nodeType":"208","messageId":"209","endLine":3,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"220","line":2,"column":29,"nodeType":"208","messageId":"209","endLine":2,"endColumn":40},{"ruleId":"206","severity":1,"message":"222","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":14},{"ruleId":"206","severity":1,"message":"223","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":37,"column":6,"nodeType":"226","endLine":37,"endColumn":25,"suggestions":"227"},{"ruleId":"206","severity":1,"message":"228","line":14,"column":3,"nodeType":"208","messageId":"209","endLine":14,"endColumn":18},{"ruleId":"206","severity":1,"message":"229","line":19,"column":3,"nodeType":"208","messageId":"209","endLine":19,"endColumn":22},{"ruleId":"206","severity":1,"message":"220","line":2,"column":29,"nodeType":"208","messageId":"209","endLine":2,"endColumn":40},{"ruleId":"206","severity":1,"message":"222","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":14},{"ruleId":"206","severity":1,"message":"230","line":3,"column":16,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"231","line":23,"column":9,"nodeType":"208","messageId":"209","endLine":23,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"232","line":47,"column":6,"nodeType":"226","endLine":47,"endColumn":45,"suggestions":"233"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"234","line":43,"column":6,"nodeType":"226","endLine":43,"endColumn":67,"suggestions":"235"},{"ruleId":"206","severity":1,"message":"236","line":34,"column":9,"nodeType":"208","messageId":"209","endLine":34,"endColumn":22},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["237"],["238"],"'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'FormContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["239"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'successCreate'. Either include it or remove the dependency array.",["241"],"'productUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [success, navigate, order._id, dispatch]",{"range":"248","text":"249"},"Update the dependencies array to be: [user, userId, successUpdate, navigate, dispatch]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, navigate, userInfo, successDelete, createdProduct, successCreate]",{"range":"252","text":"253"},[1469,1488],"[success, navigate, order._id, dispatch]",[1437,1476],"[user, userId, successUpdate, navigate, dispatch]",[1473,1534],"[dispatch, navigate, userInfo, successDelete, createdProduct, successCreate]"]